1) vip_map (key=vip_def; val=vip_meta)

struct vip_definition {
  union {
    __be32 vip;
    __be32 vipv6[4];
  };
  __u16 port;
  __u8 proto;
};

key = ip.dst | port | proto | pad = 01 01 01 01 00 00 11 00
value = flags | vip_num  = 00 00 00 00 00 00 00 01

// result of vip's lookup
struct vip_meta {
  __u32 flags;
  __u32 vip_num;
};

2) stats (key=u32; val=lb_stats) (only update) ### NO CFG

key = MAX_VIPS (512) + LRU_CNTRS (0) = 00 00 02 00
value = none 

3) lru_maps_mapping (key=num_cpy; val=ptr_to_lru_map)

key = num_cpu = 00 00 00 00
value = MAP_PTR of lru cache = 06

4) lru_map (key=flow_key)

struct flow_key {
  union {
    __be32 src;
    __be32 srcv6[4];
  };
  union {
    __be32 dst;
    __be32 dstv6[4];
  };
  union {
    __u32 ports;
    __u16 port16[2];
  };
  __u8 proto;
};

key = ip.src | ip.dst | sport | dport | proto | pad(3) = 
    = 0a 0a 0a 0a 00 00 00 00 00 00 00 00 00 00 00 00 01 01 01 01 00 00 00 00 00 00 00 00 00 00 00 00 aa aa bb bb 11 00 00 00 

struct real_pos_lru {
  __u32 pos;
  __u64 atime;
};

value = u32 pos | u64 time = 00 00 00 00 00 00 00 00 00 00 00 00

4) reals (key=u32; val=reals_definition)

key = u32 pos = 00 00 00 00
value = u32[4] real_ip.dst | flags | pad

value = aa bb cc dd 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00

struct real_definition {
  union {
    __be32 dst;
    __be32 dstv6[4];
  };
  __u8 flags;
};

5) ctl_array (key=u32, val=ctl_value)

struct ctl_value {
  union {
    __u64 value;
    __u32 ifindex;
    __u8 mac[6];
  };
};

key = u32 pos  = 00 00 00 00
val = u64 value (mac address) = aa bb cc dd ee ff 00 00

6) data stats ### NO CFG
